import java.util.regex.Pattern;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

public class TestGroups {
  private WebDriver driver;
  private String baseUrl;
  private boolean acceptNextAlert = true;
  private StringBuffer verificationErrors = new StringBuffer();

  @Before
  public void setUp() throws Exception {
	System.setProperty("webdriver.chrome.driver", "/Users/ceilenstine/Eclipse/workspace-thread3r-selenium/chromedriver");
    driver = new ChromeDriver();
    baseUrl = "https://www.google.com/";
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }

  @Test
  public void testCreateGroup() throws Exception {
	Random random = new Random();
    driver.get("http://csci4830.ddns.net:8080/thread3r-frontend/");
    driver.findElement(By.name("username")).click();
    driver.findElement(By.name("username")).clear();
    driver.findElement(By.name("username")).sendKeys("ceilenstine");
	Thread.sleep(1000);
    driver.findElement(By.name("password")).clear();
    driver.findElement(By.name("password")).sendKeys("password");
	Thread.sleep(1000);
    driver.findElement(By.name("password")).sendKeys(Keys.ENTER);
	Thread.sleep(1500);
    driver.findElement(By.linkText("Create Group")).click();
	Thread.sleep(1000);
    driver.findElement(By.id("basic_name")).click();
    driver.findElement(By.id("basic_name")).clear();
    driver.findElement(By.id("basic_name")).sendKeys("1. Group" + random.nextInt(Integer.MAX_VALUE));
	Thread.sleep(1000);
    driver.findElement(By.id("basic_description")).click();
    driver.findElement(By.id("basic_description")).clear();
    driver.findElement(By.id("basic_description")).sendKeys("Description");
	Thread.sleep(1000);
    driver.findElement(By.xpath("//form[@id='basic']/div[3]/div/div/div/button/span")).click();
    Thread.sleep(2000);
    driver.findElement(By.linkText("Log Out")).click();
    Thread.sleep(1000);
  }
  
  @Test
  public void testCreateGroupAlreadyExists() throws Exception {
	Random random = new Random();
    driver.get("http://csci4830.ddns.net:8080/thread3r-frontend/");
    driver.findElement(By.name("username")).click();
    driver.findElement(By.name("username")).clear();
    driver.findElement(By.name("username")).sendKeys("ceilenstine");
	Thread.sleep(1000);
    driver.findElement(By.name("password")).clear();
    driver.findElement(By.name("password")).sendKeys("password");
	Thread.sleep(1000);
    driver.findElement(By.name("password")).sendKeys(Keys.ENTER);
	Thread.sleep(1500);
    driver.findElement(By.linkText("Create Group")).click();
	Thread.sleep(1000);
    driver.findElement(By.id("basic_name")).click();
    driver.findElement(By.id("basic_name")).clear();
    driver.findElement(By.id("basic_name")).sendKeys("Christopher's Group");
	Thread.sleep(1000);
    driver.findElement(By.id("basic_description")).click();
    driver.findElement(By.id("basic_description")).clear();
    driver.findElement(By.id("basic_description")).sendKeys("Description");
	Thread.sleep(1000);
    driver.findElement(By.xpath("//form[@id='basic']/div[3]/div/div/div/button/span")).click();
    Thread.sleep(2000);
    driver.findElement(By.linkText("Log Out")).click();
    Thread.sleep(1000);
  }
  
  @Test
  public void testCreateGroupEmpty() throws Exception {
	Random random = new Random();
    driver.get("http://csci4830.ddns.net:8080/thread3r-frontend/");
    driver.findElement(By.name("username")).click();
    driver.findElement(By.name("username")).clear();
    driver.findElement(By.name("username")).sendKeys("ceilenstine");
	Thread.sleep(1000);
    driver.findElement(By.name("password")).clear();
    driver.findElement(By.name("password")).sendKeys("password");
	Thread.sleep(1000);
    driver.findElement(By.name("password")).sendKeys(Keys.ENTER);
	Thread.sleep(1500);
    driver.findElement(By.linkText("Create Group")).click();
	Thread.sleep(1000);
    driver.findElement(By.id("basic_name")).click();
    driver.findElement(By.id("basic_name")).clear();
	Thread.sleep(1000);
    driver.findElement(By.id("basic_description")).click();
    driver.findElement(By.id("basic_description")).clear();
	Thread.sleep(1000);
    driver.findElement(By.xpath("//form[@id='basic']/div[3]/div/div/div/button/span")).click();
    Thread.sleep(2000);
    driver.findElement(By.linkText("Log Out")).click();
    Thread.sleep(1000);
  }
  
  @Test
  public void testSearchGroup() throws Exception {
    driver.get("http://csci4830.ddns.net:8080/thread3r-frontend/login");
    driver.findElement(By.name("username")).click();
    driver.findElement(By.name("username")).clear();
    driver.findElement(By.name("username")).sendKeys("ceilenstine");
    Thread.sleep(1000);
    driver.findElement(By.name("password")).clear();
    driver.findElement(By.name("password")).sendKeys("password");
    Thread.sleep(1000);
    driver.findElement(By.name("password")).sendKeys(Keys.ENTER);
    Thread.sleep(1000);
    driver.findElement(By.linkText("Groups")).click();
    Thread.sleep(1000);
    driver.findElement(By.id("rc-tabs-1-tab-2")).click();
    Thread.sleep(1000);
    driver.findElement(By.xpath("//input[@value='']")).click();
    driver.findElement(By.xpath("//input[@value='']")).clear();
    driver.findElement(By.xpath("//input[@value='']")).sendKeys("josh");
    Thread.sleep(1000);
    driver.findElement(By.xpath("//input[@value='josh']")).sendKeys(Keys.ENTER);
    Thread.sleep(1500);
    driver.findElement(By.xpath("//input[@value='josh']")).clear();
    driver.findElement(By.xpath("//input[@value='josh']")).sendKeys("");
    Thread.sleep(1500);
    driver.findElement(By.linkText("Log Out")).click();
  }

  
  @Test
  public void testDeleteGroup() throws Exception {
    driver.get("http://csci4830.ddns.net:8080/thread3r-frontend/login");
    driver.findElement(By.name("username")).click();
    driver.findElement(By.name("username")).clear();
    driver.findElement(By.name("username")).sendKeys("ceilenstine");
    Thread.sleep(1000);
    driver.findElement(By.name("password")).click();
    driver.findElement(By.name("password")).clear();
    driver.findElement(By.name("password")).sendKeys("password");
    Thread.sleep(1000);
    driver.findElement(By.xpath("//div[@id='root']/div/div/div/div/form/div[3]/button")).click();
    driver.findElement(By.id("rc-tabs-0-tab-2")).click();
    Thread.sleep(1000);
    driver.findElement(By.xpath("//div[@id='rc-tabs-0-panel-2']/div/ul/div/div/div/div[2]/button/span")).click();
    Thread.sleep(1500);
    driver.findElement(By.xpath("//button[2]/span")).click();
    Thread.sleep(1000);
    driver.findElement(By.id("rc-tabs-0-tab-2")).click();
    Thread.sleep(1500);
    driver.findElement(By.linkText("Log Out")).click();
    Thread.sleep(1000);
  }

  @After
  public void tearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}
